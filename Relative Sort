
def first(arr, low, high, x, n):
    if(high>=low):
        mid = low + (high-low)//2
        if((mid==0 or x >arr[mid-1]) and arr[mid] == x ):
            return mid
        if(x > arr[mid]):
            return first(arr, (mid+1) , high , x,n)
        return first(arr, low, (mid-1), x, n)

    return -1

def relativeSortArray(arr1,arr2):
    m = len(arr1)
    n = len(arr2)
    temp = [0]*m
    visited = [0]*m
    for i in range(m):
        temp[i] = arr1[i]

    temp = sorted(temp)
    ind  =0

    for i in range(0,n):

        f =first(temp, 0, m-1, arr2[i], m)

        if(f==-1):
            continue

        j = f
        while(j<m and temp[j]==arr2[i]):
            arr1[ind] = temp[j]
            ind = ind +1
            visited[j] = 1
            j+=1

    for i in range(0,m):
        if(visited[i]==0):
            arr1[ind] = temp[i]
            ind+=1

    return arr1        



# for inputting values of arr1 and arr2
#arr1 = list(map(int,input().strip().split()))
#arr2 = list(map(int,input().strip().split()))
arr1 = [2,3,1,3,2,4,6,7,9,2,19]
arr2 = [2,1,4,3,9,6]
result = relativeSortArray(arr1,arr2)
print(result)
